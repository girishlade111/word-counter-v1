import { useState, useEffect } from 'react'
import { Button } from "/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle, CardFooter } from "/components/ui/card"
import { Label } from "/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select"

export default function WordCounter() {
  const [text, setText] = useState('')
  const [countWithSpaces, setCountWithSpaces] = useState(true)
  const [readingSpeed, setReadingSpeed] = useState(200) // words per minute
  const [showWarning, setShowWarning] = useState(false)

  // Calculate all metrics
  const wordCount = text ? text.trim().split(/\s+/).length : 0
  const charCount = countWithSpaces ? text.length : text.replace(/\s/g, '').length
  const sentenceCount = text ? text.split(/[.!?]+/).filter(Boolean).length : 0
  const paragraphCount = text ? text.split(/\n+/).filter(p => p.trim()).length : 0
  const readingTime = Math.ceil(wordCount / readingSpeed) || 0

  // Progress bar logic
  const progressPercentage = Math.min((charCount / 10000) * 100, 100)
  const progressColor = progressPercentage < 50 
    ? 'bg-green-500' 
    : progressPercentage < 90 
      ? 'bg-yellow-500' 
      : 'bg-red-500'

  // Warning for extremely long texts
  useEffect(() => {
    setShowWarning(charCount > 8000)
  }, [charCount])

  const clearText = () => {
    setText('')
  }

  return (
    <div className="min-h-screen bg-background text-foreground p-4 md:p-8">
      <div className="max-w-4xl mx-auto">
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="text-2xl font-bold">Word & Character Counter</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <Textarea
                value={text}
                onChange={(e) => setText(e.target.value)}
                placeholder="Type or paste your text here..."
                className="min-h-[200px]"
                aria-label="Text input for word counting"
              />
              
              <div className="flex flex-wrap gap-4 items-center">
                <div className="flex items-center space-x-2">
                  <input
                    type="checkbox"
                    id="countSpaces"
                    checked={countWithSpaces}
                    onChange={() => setCountWithSpaces(!countWithSpaces)}
                    className="h-4 w-4"
                  />
                  <Label htmlFor="countSpaces">Count spaces in characters</Label>
                </div>
                
                <div className="flex items-center space-x-2">
                  <Label htmlFor="readingSpeed">Reading speed:</Label>
                  <Select 
                    value={readingSpeed.toString()} 
                    onValueChange={(value) => setReadingSpeed(Number(value))}
                  >
                    <SelectTrigger className="w-[180px]">
                      <SelectValue placeholder="Select speed" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="100">Slow (100 wpm)</SelectItem>
                      <SelectItem value="200">Average (200 wpm)</SelectItem>
                      <SelectItem value="300">Fast (300 wpm)</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
          <Card>
            <CardHeader>
              <CardTitle>Text Statistics</CardTitle>
            </CardHeader>
            <CardContent className="grid grid-cols-2 gap-4">
              <div>
                <p className="text-sm text-muted-foreground">Words</p>
                <p className="text-2xl font-bold">{wordCount}</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">Characters</p>
                <p className="text-2xl font-bold">{charCount}</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">Sentences</p>
                <p className="text-2xl font-bold">{sentenceCount}</p>
              </div>
              <div>
                <p className="text-sm text-muted-foreground">Paragraphs</p>
                <p className="text-2xl font-bold">{paragraphCount}</p>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>Reading Time</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div>
                  <p className="text-sm text-muted-foreground">Estimated reading time</p>
                  <p className="text-2xl font-bold">
                    {readingTime} minute{readingTime !== 1 ? 's' : ''}
                  </p>
                </div>
                
                <div>
                  <p className="text-sm text-muted-foreground mb-2">Text length</p>
                  <div className="w-full bg-gray-200 rounded-full h-2.5">
                    <div 
                      className={`h-2.5 rounded-full ${progressColor}`} 
                      style={{ width: `${progressPercentage}%` }}
                    ></div>
                  </div>
                  <p className="text-xs text-muted-foreground mt-1">
                    {charCount} / 10,000 characters
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {showWarning && (
          <Card className="mb-6 border-red-500">
            <CardHeader>
              <CardTitle className="text-red-500">Warning</CardTitle>
            </CardHeader>
            <CardContent>
              <p>Your text is getting quite long ({charCount} characters). For best performance, consider breaking it into smaller sections.</p>
            </CardContent>
          </Card>
        )}

        <div className="flex justify-end">
          <Button 
            variant="outline" 
            onClick={clearText}
            disabled={!text}
          >
            Clear Text
          </Button>
        </div>

        <Card className="mt-6">
          <CardFooter className="text-sm text-muted-foreground">
            <p>
              <strong>Tip:</strong> Just type or paste your text above to see real-time statistics. 
              The maximum recommended length is 10,000 characters for optimal performance.
            </p>
          </CardFooter>
        </Card>
      </div>
    </div>
  )
}
